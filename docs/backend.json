{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user account in the Noteworthy application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the User entity."
        },
        "username": {
          "type": "string",
          "description": "The username of the user."
        },
        "email": {
          "type": "string",
          "description": "The email address of the user.",
          "format": "email"
        }
      },
      "required": [
        "id",
        "username",
        "email"
      ]
    },
    "Note": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Note",
      "type": "object",
      "description": "Represents a single note created by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Note entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the User who created the note. (Relationship: User 1:N Note)"
        },
        "title": {
          "type": "string",
          "description": "The title of the note."
        },
        "content": {
          "type": "string",
          "description": "The content of the note."
        },
        "createdAt": {
          "type": "string",
          "description": "The date and time the note was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "The date and time the note was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "title",
        "content",
        "createdAt",
        "updatedAt"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information.  Authorization is based on path (`request.auth.uid == userId`).",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/notes/{noteId}",
        "definition": {
          "entityName": "Note",
          "schema": {
            "$ref": "#/backend/entities/Note"
          },
          "description": "Stores notes created by users. Authorization is based on path (`request.auth.uid == userId`).",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "noteId",
              "description": "The unique identifier for the note."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to provide a secure and scalable solution for the Noteworthy application, focusing on authorization independence and clear data ownership. User data is stored under `/users/{userId}`, ensuring private access. Notes are stored as subcollections under each user (`/users/{userId}/notes/{noteId}`), clearly establishing the user-note relationship. This design leverages path-based ownership, simplifying security rules and enabling efficient data retrieval.\n\nThe structure achieves Authorization Independence by ensuring that each note's access control is determined solely by its path. Since notes are stored as subcollections under the user's document, access is implicitly granted only to the authenticated user who owns that path (`request.auth.uid == userId`). This eliminates the need for `get()` calls in security rules, which is crucial for maintaining atomicity in transactions and batches.\n\nTo support QAPs (Rules are not Filters), the notes are segregated by user ID. This means listing notes is always scoped to a specific user's notes, enabling secure `list` operations without needing to filter based on data within the documents. The path `/users/{userId}/notes` inherently limits access to only the notes owned by the specified user."
  }
}